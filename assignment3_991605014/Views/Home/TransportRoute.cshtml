@using System.Linq
@model assignment3_991605014.Models.TransportRoute

<h2>Add New Route</h2>
<form asp-action="AddTransportRoute" method="post">
    <div>
        <label for="RouteNumber">Route Number:</label>
        <input type="text" id="RouteNumber" name="RouteNumber" required maxlength="50" placeholder="Max 50 characters" />
        <span asp-validation-for="RouteNumber" class="text-danger"></span>
    </div>
    <div>
        <label for="RouteName">Route Name:</label>
        <input type="text" id="RouteName" name="RouteName" required maxlength="100" placeholder="Max 100 characters" />
        <span asp-validation-for="RouteName" class="text-danger"></span>
    </div>
    <div>
        <label for="RLength">Length (km):</label>
        <input type="number" id="RLength" name="RLength" required step="0.01" min="0.01" placeholder="0.01 km - 10,000 km" />
        <span asp-validation-for="RLength" class="text-danger"></span>
    </div>
    <div>
        <label for="RPayPerKm">Pay Per Km ($):</label>
        <input type="number" id="RPayPerKm" name="RPayPerKm" required step="0.01" min="0.01" max="100" placeholder="0.01 - 100" />
        <span asp-validation-for="RPayPerKm" class="text-danger"></span>
    </div>
    <button type="submit">Add Route</button>
</form>

<h2>Existing Routes</h2>
@if (ViewBag.Routes is List<assignment3_991605014.Models.TransportRoute> routes && routes.Any())
{
    <ul>
        @foreach (var route in routes)
        {
            <li>Route Number: @route.RouteNumber - Route Name: @route.RouteName - Route Length in Km: @route.RLength - Pay Per Km: $@route.RPayPerKm</li>
        }
    </ul>
}
else
{
    <p>No routes have been added yet.</p>
}
